---
- name: Get ready for all-in-one application deployment
  hosts: ec2
  remote_user: ubuntu
  become: yes
  gather_facts: true
  vars:
    deployment_version: 1.0.12
  tasks:
  - debug:
      msg: |
        "mount_path:{{ hostvars[inventory_hostname].mount_path }} , efs_endpoint: {{ hostvars[inventory_hostname].efs_endpoint }}"
  - name: Update apt cache
    apt:
      update_cache: yes
  - name: Install NFS client
    apt:
      name: nfs-common
      state: present
  - name: Ensure mount directory exists.
    file:
      path: "{{ hostvars[inventory_hostname].mount_path }}"
      state: directory
      mode: 0755
      owner: ubuntu
      group: ubuntu

  - name: Ensure EFS volume is mounted.
    mount:
      name: "{{ hostvars[inventory_hostname].mount_path }}"
      src: "{{ hostvars[inventory_hostname].efs_endpoint }}"
      fstype: nfs4
      opts: nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport
      state: mounted
  
  - name: Ensure /home/ubuntu/app directory exists.
    file:
      path: "/home/ubuntu/app"
      state: directory
      mode: 0755
      owner: ubuntu
      group: ubuntu
  
  - name: populate /etc/environment
    lineinfile:
      path: "/etc/environment"
      state: present
      regexp: "^{{ item.key }}="
      line: "{{ item.key }}={{ item.value}}"
    no_log: True
    
    with_items:
      - key: BASE_PATH 
        value : "{{ hostvars[inventory_hostname].mount_path }}"
      - key: DB_HOST
        value : "jdbc:postgresql://{{ hostvars[inventory_hostname].db_endpoint }}/{{ hostvars[inventory_hostname].db_name }}"
      - key: DB_USERNAME 
        value : "{{ hostvars[inventory_hostname].db_username }}"
      - key: DB_PASSWORD
        value : "{{ hostvars[inventory_hostname].db_password }}"
  
  - name: Install JDK
    ansible.builtin.unarchive:
      src: https://download.java.net/java/GA/jdk21.0.2/f2283984656d49d69e91c558476027ac/13/GPL/openjdk-21.0.2_linux-x64_bin.tar.gz
      dest: /home/ubuntu/app
      remote_src: yes
  
  - name: Download Application Jar
    vars:
      application_version: 1.0.14
    ansible.builtin.get_url:
      url: https://github.com/fullstack-e-learning/all-in-one/releases/download/v{{ application_version }}/all-in-one-{{ application_version }}.jar
      dest: /home/ubuntu/app
      #mode: '664'
  - name: Systemctl service
    vars:
      application_version: 1.0.14
    template:
      src: all-in-one.service.j2
      dest: /etc/systemd/system/all-in-one.service
    notify:
      - Reload systemd
  - name: Start the application
    ansible.builtin.systemd_service:
      state: started
      name: all-in-one.service
  handlers:
    - name: Reload systemd
      ansible.builtin.systemd_service:
        name: all-in-one.service
        daemon_reload: true