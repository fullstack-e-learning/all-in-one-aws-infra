---
- name: Get ready for all-in-one application deployment
  hosts: ec2
  remote_user: ubuntu
  become: true
  gather_facts: true
  vars:
    deployment_version: 1.0.14
    mount_directory: /home/ubuntu/efs
    app_directory: /home/ubuntu/app
    registry_username: amitzrepo
    registry_password: 
    #registry_password: "{{ vault_registry_password }}"
    docker_compose_version: "v2.12.2"
    compose_file: "/home/{{ ansible_user }}/docker-compose.yml"

  tasks:
  - name: Update apt cache
    apt:
      update_cache: yes
    retries: 3
    delay: 5

  - name: Install docker
    apt:
      name: docker.io
      state: present

  - name: Install python3-pip
    apt:
      name: python3-pip
      state: present

  - name: Install Docker module for Python
    pip:
      name: docker

  - name: Create Docker CLI plugins directory
    file:
      path: /usr/local/lib/docker/cli-plugins
      state: directory
      mode: '0755'

  - name: Install Docker Compose v2
    get_url:
      url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}"
      dest: /usr/local/lib/docker/cli-plugins/docker-compose
      mode: '0755'

  - name: Ensure docker-compose is executable
    file:
      path: /usr/local/lib/docker/cli-plugins/docker-compose
      mode: '0755'
      owner: root
      group: root
  
  - name: Install NFS client
    apt:
      name: nfs-common
      state: present

  - name: Ensure mount directory exists.
    file:
      path: "{{ item  }}"
      state: directory
      mode: 0755
      owner: ubuntu
      group: ubuntu
    with_items:
      - "{{ mount_directory }}"
      - "{{ app_directory }}"

  - name: Ensure EFS volume is mounted.
    mount:
      name: "{{ mount_directory }}"
      src: "{{ hostvars[inventory_hostname].efs_endpoint }}"
      fstype: nfs4
      opts: nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport
      state: mounted

  - name: Log into private registry and force re-authorization
    docker_login:
      registry: ghcr.io
      username: "{{ registry_username }}"
      password: "{{ registry_password }}"
      reauthorize: yes

  - name: Pull docker image
    community.docker.docker_image:
      name: "ghcr.io/fullstack-e-learning/all-in-one:070620242140"
      source: pull

  - name: Populate /etc/environment
    lineinfile:
      path: "/etc/environment"
      state: present
      regexp: "^{{ item.key }}="
      line: "{{ item.key }}={{ item.value }}"
    no_log: true
    with_items:
      - key: BASE_PATH 
        value: "{{ mount_directory }}"
      - key: DB_HOST
        value: "jdbc:postgresql://{{ hostvars[inventory_hostname].db_endpoint }}/{{ hostvars[inventory_hostname].db_name }}"
      - key: DB_USERNAME 
        value: "{{ hostvars[inventory_hostname].db_username }}"
      - key: DB_PASSWORD
        value: "{{ hostvars[inventory_hostname].db_password }}"

  

  - name: Ensure docker-compose.yml is present
    copy:
      src: ./docker-compose.yml
      dest: "{{ compose_file }}"
      mode: '0644'

  - name: Start Docker Compose
    command: /usr/local/lib/docker/cli-plugins/docker-compose up -d
    args:
      chdir: /home/{{ ansible_user }}
    register: docker_compose_up
    changed_when: "'done' in docker_compose_up.stdout"
