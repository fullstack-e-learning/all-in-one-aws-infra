---
- name: Get ready for all-in-one application deployment
  hosts: ec2
  remote_user: ubuntu
  become: yes
  gather_facts: true
  vars:
    deployment_version: 130620242108
    mount_directory: /home/ubuntu/efs
    app_directory: /home/ubuntu/app
  tasks:
  - name: Update cache & Install apt packages
    ansible.builtin.apt:
      update_cache: yes
      state: present
      pkg:
      - nfs-common
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
  
  - name: Add an apt signing key for docker
    ansible.builtin.apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
  
  - name: Add docker repository into sources list
    ansible.builtin.apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
      state: present
  
  - name: Update cache & Install docker
    ansible.builtin.apt:
      update_cache: yes
      state: present
      pkg:
      - docker-ce
  
  - name: Ensure Docker service is enabled and started
    ansible.builtin.systemd_service:
      state: started
      name: docker    
      enabled: yes

  - name: Add user to the docker group
    ansible.builtin.user:
      name: "{{ ansible_user }}"
      groups: docker
      append: yes
  
  - name: Ensure mount directory exists.
    ansible.builtin.file:
      path: "{{ item  }}"
      state: directory
      mode: 0755
      owner: ubuntu
      group: ubuntu
    with_items:
      - "{{ mount_directory }}"
      - "{{ app_directory }}"

  - name: Ensure EFS volume is mounted.
    mount:
      name: "{{ mount_directory }}"
      src: "{{ hostvars[inventory_hostname].efs_endpoint }}"
      fstype: nfs4
      opts: nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport
      state: mounted
  
  - name: Prepare & Copy docker-compose.yml
    ansible.builtin.template:
      src: docker-compose.yml.j2
      dest: "{{ app_directory }}/docker-compose.yml"
      mode: 0755
      owner: ubuntu
      group: ubuntu
  
  - name: Docker Login
    ansible.builtin.shell: |
      docker login ghcr.io -u {{ docker_registry_username }} -p {{ docker_registry_password }}
  
  - name: Docker Run
    ansible.builtin.shell:
      chdir: "{{ app_directory }}"
      cmd: |
        #stop first
        docker compose -f docker-compose.yml down
        # then run
        docker compose -f docker-compose.yml up -d
      
  - name: Docker log
    ansible.builtin.shell:
      chdir: "{{ app_directory }}"
      cmd: docker compose logs 
    register: dockerlogs
  
  - name: Print dockerlogs
    ansible.builtin.debug:
      msg: "{{ dockerlogs.stdout }}"
  
  - name: Check that a /actuator/health endpoint of the applicatio return 200 http status code
    ansible.builtin.uri:
      url: http://localhost:8080/actuator/health
      method: GET
    register: _result
    until: _result.status == 200
    retries: 5
    delay: 5